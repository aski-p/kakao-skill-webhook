// ÏõπÌõÖÏùÑ ÌÜµÌïú ÏòÅÌôî Îç∞Ïù¥ÌÑ∞ ÏßÅÏ†ë ÏÇΩÏûÖ
const axios = require('axios');

const RAILWAY_URL = 'https://kakao-skill-webhook-production.up.railway.app';

// Ïù∏Í∏∞ ÏòÅÌôîÎì§ÏùÑ Ïπ¥Ïπ¥Ïò§ÌÜ° ÏõπÌõÖÏúºÎ°ú ÏßÅÏ†ë Í≤ÄÏÉâÌïòÏó¨ DBÏóê Ï†ÄÏû•
const popularMovies = [
    'Í∏∞ÏÉùÏ∂© ÏòÅÌôîÌèâ',
    'Ïñ¥Î≤§Ï†∏Ïä§ ÌèâÏ†ê', 
    'ÌÉëÍ±¥ Îß§Î≤ÑÎ¶≠ ÏòÅÌôîÌèâ',
    'Ïù∏ÌÑ∞Ïä§ÌÖîÎùº ÌèâÏ†ê',
    'ÎùºÎùºÎûúÎìú ÏòÅÌôîÌèâ',
    'Ï°∞Ïª§ ÌèâÏ†ê',
    'Í≤®Ïö∏ÏôïÍµ≠ ÏòÅÌôîÌèâ',
    'ÌÉÄÏù¥ÌÉÄÎãâ ÌèâÏ†ê',
    'ÏïÑÎ∞îÌÉÄ ÏòÅÌôîÌèâ',
    'Ïä§ÌååÏù¥ÎçîÎß® ÌèâÏ†ê',
    'ÏïÑÏù¥Ïñ∏Îß® ÏòÅÌôîÌèâ',
    'Ï∫°Ìã¥ ÏïÑÎ©îÎ¶¨Ïπ¥ ÌèâÏ†ê',
    'ÌÜ†Î•¥ ÏòÅÌôîÌèâ',
    'Î∏îÎûôÌå¨ÏÑú ÌèâÏ†ê',
    'ÎØ∏ÏÖò ÏûÑÌååÏÑúÎ∏î ÏòÅÌôîÌèâ',
    'Î∂ÑÎÖ∏Ïùò ÏßàÏ£º ÌèâÏ†ê',
    'Ï•¨ÎùºÍ∏∞ Í≥µÏõê ÏòÅÌôîÌèâ',
    'Ìï¥Î¶¨Ìè¨ÌÑ∞ ÌèâÏ†ê',
    'Ïä§ÌÉÄÏõåÏ¶à ÏòÅÌôîÌèâ',
    'Î∞∞Ìä∏Îß® ÌèâÏ†ê',
    'Î≤îÏ£ÑÎèÑÏãú ÏòÅÌôîÌèâ',
    'Í∑πÌïúÏßÅÏóÖ ÌèâÏ†ê',
    'Î™ÖÎüâ ÏòÅÌôîÌèâ',
    'Ïã†Í≥ºÌï®Íªò ÌèâÏ†ê',
    'ÌÉùÏãúÏö¥Ï†ÑÏÇ¨ ÏòÅÌôîÌèâ',
    'Î∂ÄÏÇ∞Ìñâ ÌèâÏ†ê',
    'ÎØ∏ÎÇòÎ¶¨ ÏòÅÌôîÌèâ',
    'Î™®Í∞ÄÎîîÏäà ÌèâÏ†ê',
    'Íµ≠Ï†úÏãúÏû• ÏòÅÌôîÌèâ',
    'Î≤†ÌÖåÎûë ÌèâÏ†ê'
];

async function populateMoviesViaWebhook() {
    console.log('üé¨ ÏõπÌõÖÏùÑ ÌÜµÌïú ÏòÅÌôî Îç∞Ïù¥ÌÑ∞Î≤†Ïù¥Ïä§ Íµ¨Ï∂ï ÏãúÏûë\n');
    console.log(`üìä ÎåÄÏÉÅ ÏòÅÌôî: ${popularMovies.length}Í∞ú`);
    console.log('‚è∞ ÏòàÏÉÅ ÏÜåÏöî ÏãúÍ∞Ñ: 5-10Î∂Ñ (Í∞Å ÏöîÏ≤≠Îãπ 5Ï¥à Ï†úÌïú)\n');
    
    const results = {
        totalRequests: 0,
        successfulResponses: 0,
        movieReviewsGenerated: 0,
        errors: []
    };
    
    for (const movieQuery of popularMovies) {
        try {
            console.log(`üîç "${movieQuery}" ÏöîÏ≤≠ Ï§ë...`);
            
            // Ïπ¥Ïπ¥Ïò§ÌÜ° ÏõπÌõÖ ÌòïÌÉúÎ°ú ÏöîÏ≤≠
            const kakaoRequest = {
                intent: {
                    id: "movie_request",
                    name: "ÏòÅÌôîÌèâ ÏöîÏ≤≠"
                },
                userRequest: {
                    utterance: movieQuery,
                    user: {
                        id: "test_user",
                        type: "botUserKey"
                    }
                },
                bot: {
                    id: "movie_bot",
                    name: "ÏòÅÌôîÌèâ Î¥á"
                },
                action: {
                    id: "movie_action",
                    name: "ÏòÅÌôîÌèâ Ï†úÍ≥µ"
                }
            };
            
            const response = await axios.post(`${RAILWAY_URL}/kakao-skill-webhook`, kakaoRequest, {
                timeout: 30000,
                headers: {
                    'Content-Type': 'application/json'
                }
            });
            
            results.totalRequests++;
            
            if (response.status === 200 && response.data.template) {
                const responseText = response.data.template.outputs[0]?.simpleText?.text || '';
                
                if (responseText.includes('ÏòÅÌôîÌèâ Ï¢ÖÌï©') || responseText.includes('ÌèâÏ†ê')) {
                    console.log(`‚úÖ "${movieQuery}" - ÏòÅÌôîÌèâ ÏÉùÏÑ± ÏÑ±Í≥µ`);
                    results.movieReviewsGenerated++;
                    
                    // Îç∞Ïù¥ÌÑ∞ ÏÜåÏä§ ÌôïÏù∏
                    if (responseText.includes('Supabase')) {
                        console.log('   üìä Îç∞Ïù¥ÌÑ∞ ÏÜåÏä§: Supabase DB');
                    } else if (responseText.includes('Í≥µÍ∞ú ÏòÅÌôî Îç∞Ïù¥ÌÑ∞Î≤†Ïù¥Ïä§')) {
                        console.log('   üìä Îç∞Ïù¥ÌÑ∞ ÏÜåÏä§: Î°úÏª¨ Í≥µÍ∞ú DB');
                    } else if (responseText.includes('ÎÑ§Ïù¥Î≤Ñ')) {
                        console.log('   üìä Îç∞Ïù¥ÌÑ∞ ÏÜåÏä§: ÎÑ§Ïù¥Î≤Ñ API (ÏûêÎèô DB Ï†ÄÏû•)');
                    }
                } else {
                    console.log(`‚ö†Ô∏è "${movieQuery}" - ÏòÅÌôîÌèâ Ïô∏ ÏùëÎãµ`);
                }
                
                results.successfulResponses++;
            } else {
                console.log(`‚ùå "${movieQuery}" - ÏùëÎãµ ÌòïÏãù Ïò§Î•ò`);
                results.errors.push(`${movieQuery}: ÏùëÎãµ ÌòïÏãù Ïò§Î•ò`);
            }
            
            // Í∞Å ÏöîÏ≤≠ ÏÇ¨Ïù¥Ïóê 2Ï¥à ÎåÄÍ∏∞ (ÏÑúÎ≤Ñ Î∂ÄÌïò Î∞©ÏßÄ)
            await new Promise(resolve => setTimeout(resolve, 2000));
            
        } catch (error) {
            console.error(`‚ùå "${movieQuery}" ÏöîÏ≤≠ Ïò§Î•ò:`, error.message);
            results.errors.push(`${movieQuery}: ${error.message}`);
            
            // Ïò§Î•ò Î∞úÏÉùÏãú Îçî Í∏¥ ÎåÄÍ∏∞
            await new Promise(resolve => setTimeout(resolve, 3000));
        }
    }
    
    console.log('\nüéâ ÏõπÌõÖÏùÑ ÌÜµÌïú ÏòÅÌôî Îç∞Ïù¥ÌÑ∞Î≤†Ïù¥Ïä§ Íµ¨Ï∂ï ÏôÑÎ£å!');
    console.log('='.repeat(50));
    console.log(`üìä Ï¥ù ÏöîÏ≤≠ Ïàò: ${results.totalRequests}Í∞ú`);
    console.log(`‚úÖ ÏÑ±Í≥µÏ†ÅÏù∏ ÏùëÎãµ: ${results.successfulResponses}Í∞ú`);
    console.log(`üé¨ ÏòÅÌôîÌèâ ÏÉùÏÑ±: ${results.movieReviewsGenerated}Í∞ú`);
    console.log(`‚ùå Ïò§Î•ò Î∞úÏÉù: ${results.errors.length}Í∞ú`);
    
    if (results.errors.length > 0) {
        console.log('\n‚ö†Ô∏è Î∞úÏÉùÌïú Ïò§Î•òÎì§:');
        results.errors.slice(0, 5).forEach((error, index) => {
            console.log(`  ${index + 1}. ${error}`);
        });
        if (results.errors.length > 5) {
            console.log(`  ... Í∑∏ Ïô∏ ${results.errors.length - 5}Í±¥`);
        }
    }
    
    console.log('\nüí° Ìö®Í≥º:');
    console.log('- ÎÑ§Ïù¥Î≤Ñ APIÎ°ú Í≤ÄÏÉâÎêú ÏòÅÌôîÎì§Ïù¥ ÏûêÎèôÏúºÎ°ú SupabaseÏóê Ï†ÄÏû•Îê®');
    console.log('- Îã§Ïùå Í≤ÄÏÉâÎ∂ÄÌÑ∞Îäî Supabase DBÏóêÏÑú Îπ†Î•¥Í≤å Ï°∞Ìöå');
    console.log('- ÏòÅÌôîÌèâ ÌíàÏßà Ìñ•ÏÉÅ (Í∞êÎèÖ, Ï∂úÏó∞ÏßÑ, ÌèâÏ†ê Îì± ÏÉÅÏÑ∏ Ï†ïÎ≥¥)');
    
    return results;
}

async function testMovieQueries() {
    console.log('\nüß™ Ï†ÄÏû•Îêú ÏòÅÌôî Îç∞Ïù¥ÌÑ∞ ÌÖåÏä§Ìä∏');
    console.log('='.repeat(30));
    
    const testQueries = [
        'Í∏∞ÏÉùÏ∂© ÏòÅÌôîÌèâ',
        'Ïñ¥Î≤§Ï†∏Ïä§ ÌèâÏ†ê',
        'ÌÉëÍ±¥ Îß§Î≤ÑÎ¶≠ Î¶¨Î∑∞'
    ];
    
    for (const query of testQueries) {
        try {
            console.log(`\nüîç "${query}" ÌÖåÏä§Ìä∏...`);
            
            const kakaoRequest = {
                userRequest: {
                    utterance: query,
                    user: { id: "test_user" }
                }
            };
            
            const response = await axios.post(`${RAILWAY_URL}/kakao-skill-webhook`, kakaoRequest, {
                timeout: 15000,
                headers: { 'Content-Type': 'application/json' }
            });
            
            if (response.data.template?.outputs?.[0]?.simpleText?.text) {
                const text = response.data.template.outputs[0].simpleText.text;
                console.log('‚úÖ ÏùëÎãµ Î∞õÏùå');
                
                // Îç∞Ïù¥ÌÑ∞ ÏÜåÏä§ ÌôïÏù∏
                if (text.includes('Supabase')) {
                    console.log('   üìä Îç∞Ïù¥ÌÑ∞ ÏÜåÏä§: ‚úÖ Supabase DB (Î™©Ìëú Îã¨ÏÑ±!)');
                } else if (text.includes('Í≥µÍ∞ú ÏòÅÌôî Îç∞Ïù¥ÌÑ∞Î≤†Ïù¥Ïä§')) {
                    console.log('   üìä Îç∞Ïù¥ÌÑ∞ ÏÜåÏä§: Î°úÏª¨ Í≥µÍ∞ú DB');
                } else {
                    console.log('   üìä Îç∞Ïù¥ÌÑ∞ ÏÜåÏä§: ÎÑ§Ïù¥Î≤Ñ API');
                }
                
                // Ï†ïÎ≥¥ ÏôÑÏÑ±ÎèÑ ÌôïÏù∏
                const hasDirector = text.includes('Í∞êÎèÖ:');
                const hasCast = text.includes('Ï∂úÏó∞:');
                const hasRating = text.includes('‚òÖ') || text.includes('ÌèâÏ†ê');
                
                console.log(`   ‚ÑπÔ∏è Ï†ïÎ≥¥: Í∞êÎèÖ(${hasDirector ? '‚úÖ' : '‚ùå'}) Ï∂úÏó∞ÏßÑ(${hasCast ? '‚úÖ' : '‚ùå'}) ÌèâÏ†ê(${hasRating ? '‚úÖ' : '‚ùå'})`);
            }
            
        } catch (error) {
            console.log(`‚ùå "${query}" ÌÖåÏä§Ìä∏ Ïò§Î•ò:`, error.message);
        }
    }
}

// Î©îÏù∏ Ïã§Ìñâ
async function main() {
    console.log('üöÄ ÏõπÌõÖÏùÑ ÌÜµÌïú Supabase ÏòÅÌôî Îç∞Ïù¥ÌÑ∞Î≤†Ïù¥Ïä§ Íµ¨Ï∂ï');
    console.log('Railway ÌôòÍ≤ΩÏóêÏÑú ÏûêÎèô Îç∞Ïù¥ÌÑ∞ ÏàòÏßë');
    console.log('='.repeat(60));
    
    // 1. ÏõπÌõÖÏùÑ ÌÜµÌïú ÎåÄÎüâ ÏòÅÌôî Îç∞Ïù¥ÌÑ∞ ÏàòÏßë
    const results = await populateMoviesViaWebhook();
    
    // 2. Í≤∞Í≥º ÌÖåÏä§Ìä∏
    await testMovieQueries();
    
    console.log('\nüéØ ÏµúÏ¢Ö Í≤∞Í≥º:');
    console.log('- Supabase movies ÌÖåÏù¥Î∏îÏóê ÏòÅÌôî Îç∞Ïù¥ÌÑ∞ ÏûêÎèô Ï†ÄÏû•Îê®');
    console.log('- Ìñ•ÌõÑ ÏòÅÌôî Í≤ÄÏÉâÏù¥ DB Í∏∞Î∞òÏúºÎ°ú Îπ†Î•¥Í≥† Ï†ïÌôïÌïòÍ≤å ÎèôÏûë');
    console.log('- Ïπ¥Ïπ¥Ïò§ÌÜ°ÏóêÏÑú "ÏòÅÌôîÏ†úÎ™© + ÏòÅÌôîÌèâ/ÌèâÏ†ê" ÌòïÌÉúÎ°ú ÌÖåÏä§Ìä∏ Í∞ÄÎä•');
}

// Ïã§Ìñâ
if (require.main === module) {
    main().catch(error => {
        console.error('‚ùå Ïã§Ìñâ Ïò§Î•ò:', error.message);
        process.exit(1);
    });
}

module.exports = { populateMoviesViaWebhook, testMovieQueries };